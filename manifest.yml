type: install
name: Multi-Region Primary-Primary Cluster
id: multiregion-primary-primary-cluster
baseUrl: https://raw.githubusercontent.com/sych74/mysql-multiregion/main

settings:
  fields:
    - caption: Regions
      type: regionlist
      name: regions
      disableInactive: true
      selectFirstAvailable: false
      multiSelect: true
      required: true
      min: 3
      max: 3

    - caption: Environment
      type: envname
      name: envName
      dependsOn: region
      randomName: true
      showFullDomain: false
      required: true

globals:
  db_user: user-${fn.random}
  db_pswd: ${fn.password(10)}
  repl_user: repl-${fn.random}
  repl_pswd: ${fn.password(10)}

onInstall:
  - initGlobals
  - createEnvs
  
actions:
  initGlobals:
    - script: |
        var regions = '${settings.regions}'.split(','), index, resp,
            envGroups = eval('(' + MANIFEST + ')').envGroups,
            onAfterReturn = { setGlobals: {} }, 
            glbs = onAfterReturn.setGlobals;
        resp = jelastic.env.control.GetRegions(appid, session);
        if (resp.result != 0) return resp;
        resp = resp.array;
        for (var i = 0, n = regions.length; i < n; i ++) {
          index = i + 1;
          glbs["region-" + index] = regions[i];
          glbs["displayName-" + index] = "Cluster " + index;          
        }
        glbs["envGroups"] = envGroups;
        return { result: 0, onAfterReturn: onAfterReturn };

  createEnvs:
    - script: |
        var regions = '${settings.regions}'.split(','), actions = [];
        for (var cluster = 1, n = regions.length + 1; cluster < n; cluster ++) {
          actions.push({
            jps: "${baseUrl}/scripts/topology.jps?_r=${fn.random}",
            envName: "${settings.envName}-" + cluster,
            loggerName: "${settings.envName}-" + cluster,
            envGroups: "${globals.envGroups}",
            displayName: "${globals.displayName-" + cluster + "}",
            region: "${globals.region-" + cluster + "}",
            settings: {
              "db_user": "${globals.db_user}",
              "db_pswd": "${globals.db_pswd}",
              "repl_user": "${globals.repl_user}",
              "repl_pswd": "${globals.repl_pswd}"
            }
          });
        }
        return { result: 0, onAfterReturn: { 'marketplace.jps.install': actions } };
